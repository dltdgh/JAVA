import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.Random;


public class Gift {
	int x, y;
	int width = 30, height = 30;
	int state = 0;
	
	/*state:
	 * 1: red add a life
	 * 2: orange kill all
	 * 3: yellow add three super fire
	 * 4: blue transmit
	 * 5: purple add a friend tank*/
	
	Random random = new Random();
	TankClient tc = null;
	boolean Alive = true;
	
	public Gift(int x, int y, TankClient tc){
		this.x = x;
		this.y = y;
		this.tc = tc;
		this.state = Math.abs(random.nextInt())%4+1;
	}
	
	public void draw(Graphics g){
		
		if(Alive){
			Color c = g.getColor();
			switch (state) {
			case 1:
				g.setColor(Color.RED);
				break;
			case 2:
				g.setColor(Color.ORANGE);
				break;
			case 3:
				g.setColor(Color.YELLOW);
				break;
			case 4:
				g.setColor(Color.BLUE);
				break;
			case 5:
				g.setColor(Color.PINK);
				break;
			default:
				break;
			}
			g.fillOval(x, y, width, height);
			g.setColor(c);
		}
		else{
			tc.gifts.remove(this);
		}
	}
	
	public void beEaten(Tank t){
		if(this.getRect().intersects(t.getRect())){
			this.Alive = false;
			getEffect(t);
		}
	}
	
	public void getEffect(Tank t){
		switch (state) {
		case 1:
			tc.myTank.life++;
			break;
		case 2:
			for(int i = 0; i < tc.tanks.size(); i++){
				tc.tanks.get(i).life = 0;
			}
			break;
		case 3:
			t.superFireNum += 3;
			break;
		case 4:
			t.transmit();
			break;
		case 5:
		//	tc.tanks.add(tc.createTank(true));
			break;
		default:
			break;
		}
	}
	
	public Rectangle getRect(){
		return new Rectangle(x, y, width, height);
	}
}
